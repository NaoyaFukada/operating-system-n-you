Permission Options:
  Read:
    - Allows someone to read the contents of a file or folder
  Write: 
    - Allows someone to write informatrion to a file or folder
  Execute:
    - Allows someone to execute a program
    
To change permissions:
  - chmod
  - Permission set:
    - u: owner
    - g: Group
    - o: Other users
  - To add or remove permissions, just use a plus or minus symbol that indicates who the permission effects.

To change permissions numerically:
  - The numerical equivalent of rws is:
    - 4 for read or r
    - 2 for write or w
    - 1 for execute or x

Meaning of 'rwsr-xr-x':
  - r: Read permission. The file can be read.
  - w: Write permission. The file can be modified.
  - s: Setuid bit. When applied to an executable file, it allows the file to be executed with the permissions of the file owner.
  - x: Execute permission. The file can be executed as a program.
  - Also, from the left, owner permission, group permission, and other user permission.
    - rws: Owner Permission
    - r-x: Group Permission
    - r-x: Group Permission
  
Setuid (Set User ID): 
  - This is a special permission in Linux that allows users to run an executable file with the file owner's permissions, not just their own. For example, when you change your 
    password, the command needs to access and modify files that are usually only accessible by the root user, like the /etc/shadow file. With setuid permission set on the 
    command's executable file, when you run the command, it temporarily gains root permissions to modify these protected files, even though you're not logged in as root. 
    This way, setuid enables specific tasks that require elevated privileges without giving users full root access, enhancing both functionality and security.
  - setuid is assigned to the owner section of permissions. By doing this, when users in the 'group' or 'other' sections execute the file, 
    they do so with the permissions of the file's owner. (This is talking about higher privileges)
  - In addition to the normal executable permission, owner owns the higher privileged permission like modifying important system files. 
    By assiging setUID, other user can execute those file as well. However, if other user don't even have the normal executable permission,
    although setuid is assigned, they cannot execute anything. 

SetGID (Set Group ID):
  - When the setGID bit is set on a directory, it affects the group ownership of new files and subdirectories created within that directory. 
  - Here’s how it works:
    - Group Ownership Inheritance: Normally, when you create a file or directory, its group ownership is set to the group of the user who 
      created it. However, if a directory has the setGID bit set, any files or directories created within it inherit the group ownership 
      of the parent directory, not the group of the user who created the files.
    - Why It’s Useful: This feature is particularly useful in collaborative environments where a group of users needs to share files and 
      have access to modify them. By setting the setGID bit on a directory, you ensure that all files and subdirectories created within it 
      maintain the group ownership that grants appropriate permissions to all group members.

Sticky Bit:
  - Purpose of the Sticky Bit:
    - Shared Directories: 
      - In directories where multiple users have write permissions, such as /tmp, the sticky bit prevents users from deleting or renaming 
        files and directories they do not own. This ensures that while users can create, read, and write files in a shared directory, they 
        cannot interfere with the files owned by others.
  - How It Works:
    - Deletion Restriction: 
      - When the sticky bit is set on a directory, only the file's owner, the directory's owner, or the root user can delete or rename files 
        within that directory. This is particularly important for directories like /tmp, where the system and possibly many users write 
        temporary files but should not be able to delete or tamper with each other's files.
  - The symboric bit for this is T, and numerical bit is a 1.
  